package com.senderman.telecrafter.minecraft;

import com.senderman.telecrafter.telegram.TelegramProvider;
import io.papermc.paper.event.player.AsyncChatEvent;
import net.kyori.adventure.text.TextComponent;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.CreatureSpawnEvent;
import org.bukkit.event.entity.EntityDeathEvent;
import org.bukkit.event.entity.PlayerDeathEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.event.server.BroadcastMessageEvent;
import org.bukkit.event.server.ServerLoadEvent;

import java.util.Optional;

public class EventListener implements Listener {

    private final TelegramProvider telegram;

    public EventListener(TelegramProvider telegram) {
        this.telegram = telegram;
    }


    @EventHandler
    void onJoin(PlayerJoinEvent event) {
        String playerName = event.getPlayer().getName();
        telegram.sendMessageToMainChat("‚ñ∂Ô∏è <b>" + playerName + " –∑–∞—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä!</b>");
    }

    @EventHandler
    void onLeave(PlayerQuitEvent event) {
        String playerName = event.getPlayer().getName();
        telegram.sendMessageToMainChat("‚óÄÔ∏è <b>" + playerName + " —É—à–µ–ª —Å —Å–µ—Ä–≤–µ—Ä–∞!</b>");
    }

    @EventHandler
    void onPlayerDeath(PlayerDeathEvent event) {
        String message = Optional.ofNullable(event.getDeathMessage())
                .orElseGet(() -> event.getEntity().getName() + "—É–º–µ—Ä");
        telegram.sendMessageToMainChat("‚ò†Ô∏è " + message);
    }

    @EventHandler
    void onPlayerMessage(AsyncChatEvent event) {
        // this cast is safe as AsyncChatEvent contains TextComponent
        String message = ((TextComponent) event.message()).content();
        String name = event.getPlayer().getName();
        telegram.sendMessageToMainChat(String.format("\uD83D\uDCAC <b>[%s]</b>: %s", name, message));
    }

    @EventHandler
    void onEntityDeath(EntityDeathEvent event) {
        switch (event.getEntityType()) {
            case ENDER_DRAGON:
                telegram.sendMessageToMainChat("\uD83C\uDFC6 –î—Ä–∞–∫–æ–Ω –ö—Ä–∞—è –ø–æ–±–µ–∂–¥–µ–Ω!");
                break;
            case WITHER:
                telegram.sendMessageToMainChat("\uD83D\uDE31 –ò—Å—Å—É—à–∏—Ç–µ–ª—å –ø–æ–±–µ–∂–¥–µ–Ω!");
                break;
            case ELDER_GUARDIAN:
                telegram.sendMessageToMainChat("\uD83D\uDC21 –î—Ä–µ–≤–Ω–∏–π —Å—Ç—Ä–∞–∂ –ø–æ–±–µ–∂–¥–µ–Ω!");
                break;
        }
    }

    @EventHandler
    void onMobSpawn(CreatureSpawnEvent event) {
        switch (event.getEntity().getType()) {
            case ENDER_DRAGON:
                telegram.sendMessageToMainChat("üòé –°–µ–π—á–∞—Å –±—É–¥–µ—Ç —Å—Ä–∞–∂–µ–Ω–∏–µ —Å –î—Ä–∞–∫–æ–Ω–æ–º –ö—Ä–∞—è!");
                break;
            case WITHER:
                telegram.sendMessageToMainChat("üò± –°–µ–π—á–∞—Å –±—É–¥–µ—Ç —Å—Ä–∞–∂–µ–Ω–∏–µ —Å –ò—Å—Å—É—à–∏—Ç–µ–ª–µ–º!");
                break;
        }
    }

    @EventHandler
    void onServerMessage(BroadcastMessageEvent event) {
        // this cast is safe as BroadcastMessageEvent contains TextComponent
        String message = ((TextComponent) event.message()).content();
        telegram.sendMessageToMainChat("üí¨ " + message);
    }

    @EventHandler
    void onServerLoad(ServerLoadEvent event) {
        telegram.sendMessageToMainChat("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!");
    }

}
